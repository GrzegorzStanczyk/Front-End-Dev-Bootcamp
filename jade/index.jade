doctype html
html(lang='pl')
  head
    meta(charset='UTF-8')
    link( rel='stylesheet' href='css/main.css')
    title Zadania z pierwszego tygodnia
  body
    #container

      nav
        ul
          li link1
          li link2
          li link3
          li link4

      h2 Zadanie 2

      p Wszystkie elementy &lt;div&gt;, posiadające zarówno klasę "grid" oraz klasę "grid-12"
      .grid grid
      .grid-12 grid-12
      .grid.grid-12 grid grid-12

      p
        | Wszystkie elementy &lt;a&gt;, których atrybut "href" zaczyna się
        | na "http", znajdujące się w elemencie o klasie "nav"
      .nav
        ul
          li
            a(href='#') href='#'
          li
            a(href='#') href='#'
          li
            a(href='http://eduweb.pl' target='_blank') href='http://eduweb.pl'
          li
            a(href='http://eduweb.pl' target='_blank') href='http://eduweb.pl'

      p
        | Wszystkie elementy &lt;input&gt;, których typ to "radio" lub
        | "checkbox" oraz dodatkowo nie są aktualnie zaznaczone (checked).
      form
        label Imię: #[input(type='text' name='name')]
        label Mężczyzna: #[input(type='radio' name='gender' value='male' checked='checked')]
        label Kobieta: #[input(type='radio' name='gender' value='female')]
        label Pełnoletni: #[input(type='checkbox')]

      p
        | Wyłącznie pierwszy element &lt;p&gt;, który jest pusty (nie
        | zawiera dzieci) oraz znajduje się w elemencie &lt;div&gt; z
        | identyfikatorem "text"

      #text
        p Lorem ipsum dolor sit amet, consectetur adipisicing elit,
        p
        p Lorem ipsum dolor sit amet, consectetur adipisicing elit,
        p
        p Lorem ipsum dolor sit amet, consectetur adipisicing elit,

      p
        | Wszystkie elementy z klasą "pagination-item", które nie są
        | elementem &lt;span&gt;

      a(href='#' class='pagination-item') 1
      a(href='#' class='pagination-item') 2
      a(href='#' class='pagination-item') 3
      span(class='pagination-item pagination-item--current') 4

      h2 Zadanie 3
      p Stwórz kontener z przykładową nawigacją, który domyślnie nie będzie widoczny. Może on znajdować się na samej górze strony lub w sidebarze. Następnie umieść na stronie przycisk typu “hamburger menu”, po kliknięciu którego wysunie się wcześniej ukryte menu. Animacja, jaką zastosujesz, zależy od Ciebie. Ponowne kliknięcie przycisku powinno chować nawigację.
      button.hamburger
        span

      h2 Zadanie 4
      p Stwórz aplikację, która zawierać będzie prosty formularz z wyłącznie jednym polem &lt; input &gt;, a także przyciskiem &lt; button &gt;. Napisz kod tak, aby po wpisaniu informacji do pola i po wciśnięciu przycisku, wstawić wpisane informacje do nowego elementu &lt; li &gt;, a ten element do wcześniej wstawionego elementu &lt; ul &gt;. W ten sposób, za każdym razem, gdy zostanie wpisane np. jakieś imię, pojawi się ono na stronie. Dodatkowo możesz (nie musisz) zadbać o to, by jeśli nic nie zostało wpisane do pola, nie wstawiać na stronę pustego elementu &lt; li &gt;.
      form.form
        input(type='text' placeholder="dodaj wpis" name='registr')
        button(type='submit') Dodaj

      h2 Zadanie 5
      p Stwórz aplikację, która pozwoli po kliknięciu wybranego przycisku, np. “Załaduj”, pobrać AJAXem dane typu JSON i wyświetlić je na stronie. Adres, pod który wyślesz zapytanie z użyciem jQuery to https://jsonplaceholder.typicode.com/users Otrzymane dane wyświetl na stronie w formie nieuporządkowanej listy &lt; ul &gt;, a każdego użytkownika w tagu &lt; li &gt;. Z podanych danych wyłuskaj name, username, email oraz phone. Sformatuj je według własnego uznania.
      button.json Załaduj

    <!-- #container-->
    script(src="https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.js")
    script(src='js/script.js')